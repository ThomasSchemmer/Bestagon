#include "Assets/Materials/Shaders/Util/Util.cginc"

#pragma kernel Main

struct CloudPoint{
    int Data;
};

RWStructuredBuffer<CloudPoint> Result;
float CellCount;
float Zoom;
float Iterations;
float Factor;

[numthreads(8,8,1)]
void Main (uint3 id : SV_DispatchThreadID)
{

    float DistSqrR = ssnoise(id / (4.0 * 10), 1, 0, 3, Factor);
    float DistSqrG = svoronoi3Tiled(id / ((Zoom - 0) * 10), CellCount, Iterations + 0, Factor);
    float DistSqrB = svoronoi3Tiled(id / ((Zoom - 1) * 10), CellCount, Iterations + 1, Factor);
    float DistSqrA = svoronoi3Tiled(id / ((Zoom - 2) * 10), CellCount, Iterations + 2, Factor);
    int R = (int)(sqrt(DistSqrR) * 255) & 0xFF;
    int G = (int)((1 - sqrt(DistSqrG)) * 255) & 0xFF;
    int B = (int)((1 - sqrt(DistSqrB)) * 255) & 0xFF;
    int A = (int)((1 - sqrt(DistSqrA)) * 255) & 0xFF;

    int Data = R << 24 | G << 16 | B << 8 | A;

    int Pos = id.z * 256 * 256 + id.y * 256 + id.x;
    Result[Pos].Data = Data;
}
